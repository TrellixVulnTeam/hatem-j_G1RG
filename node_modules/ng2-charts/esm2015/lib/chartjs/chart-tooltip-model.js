/**
 * @fileoverview added by tsickle
 * Generated from: lib/chartjs/chart-tooltip-model.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
export function ChartTooltipModel() { }
if (false) {
    /** @type {?} */
    ChartTooltipModel.prototype.dataPoints;
    /** @type {?} */
    ChartTooltipModel.prototype.xPadding;
    /** @type {?} */
    ChartTooltipModel.prototype.yPadding;
    /** @type {?} */
    ChartTooltipModel.prototype.xAlign;
    /** @type {?} */
    ChartTooltipModel.prototype.yAlign;
    /** @type {?} */
    ChartTooltipModel.prototype.x;
    /** @type {?} */
    ChartTooltipModel.prototype.y;
    /** @type {?} */
    ChartTooltipModel.prototype.width;
    /** @type {?} */
    ChartTooltipModel.prototype.height;
    /** @type {?} */
    ChartTooltipModel.prototype.caretX;
    /** @type {?} */
    ChartTooltipModel.prototype.caretY;
    /**
     * The body lines that need to be rendered
     * Each object contains 3 parameters
     * * before: string[] -- lines of text before the line with the color square
     * * lines: string[]; -- lines of text to render as the main item with color square
     * * after: string[]; -- lines of text to render after the main lines
     * @type {?}
     */
    ChartTooltipModel.prototype.body;
    /** @type {?} */
    ChartTooltipModel.prototype.beforeBody;
    /** @type {?} */
    ChartTooltipModel.prototype.afterBody;
    /** @type {?} */
    ChartTooltipModel.prototype.bodyFontColor;
    /** @type {?} */
    ChartTooltipModel.prototype._bodyFontFamily;
    /** @type {?} */
    ChartTooltipModel.prototype._bodyFontStyle;
    /** @type {?} */
    ChartTooltipModel.prototype._bodyAlign;
    /** @type {?} */
    ChartTooltipModel.prototype.bodyFontSize;
    /** @type {?} */
    ChartTooltipModel.prototype.bodySpacing;
    /** @type {?} */
    ChartTooltipModel.prototype.title;
    /** @type {?} */
    ChartTooltipModel.prototype.titleFontColor;
    /** @type {?} */
    ChartTooltipModel.prototype._titleFontFamily;
    /** @type {?} */
    ChartTooltipModel.prototype._titleFontStyle;
    /** @type {?} */
    ChartTooltipModel.prototype.titleFontSize;
    /** @type {?} */
    ChartTooltipModel.prototype._titleAlign;
    /** @type {?} */
    ChartTooltipModel.prototype.titleSpacing;
    /** @type {?} */
    ChartTooltipModel.prototype.titleMarginBottom;
    /** @type {?} */
    ChartTooltipModel.prototype.footer;
    /** @type {?} */
    ChartTooltipModel.prototype.footerFontColor;
    /** @type {?} */
    ChartTooltipModel.prototype._footerFontFamily;
    /** @type {?} */
    ChartTooltipModel.prototype._footerFontStyle;
    /** @type {?} */
    ChartTooltipModel.prototype.footerFontSize;
    /** @type {?} */
    ChartTooltipModel.prototype._footerAlign;
    /** @type {?} */
    ChartTooltipModel.prototype.footerSpacing;
    /** @type {?} */
    ChartTooltipModel.prototype.footerMarginTop;
    /** @type {?} */
    ChartTooltipModel.prototype.caretSize;
    /** @type {?} */
    ChartTooltipModel.prototype.caretPadding;
    /** @type {?} */
    ChartTooltipModel.prototype.cornerRadius;
    /** @type {?} */
    ChartTooltipModel.prototype.backgroundColor;
    /** @type {?} */
    ChartTooltipModel.prototype.labelColors;
    /** @type {?} */
    ChartTooltipModel.prototype.labelTextColors;
    /** @type {?} */
    ChartTooltipModel.prototype.opacity;
    /** @type {?} */
    ChartTooltipModel.prototype.legendColorBackground;
    /** @type {?} */
    ChartTooltipModel.prototype.displayColors;
    /** @type {?} */
    ChartTooltipModel.prototype.borderColor;
    /** @type {?} */
    ChartTooltipModel.prototype.borderWidth;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQtdG9vbHRpcC1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZzItY2hhcnRzL3NyYy8iLCJzb3VyY2VzIjpbImxpYi9jaGFydGpzL2NoYXJ0LXRvb2x0aXAtbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFLQSx1Q0FvRUM7OztJQWxFQyx1Q0FBK0I7O0lBRS9CLHFDQUFpQjs7SUFDakIscUNBQWlCOztJQUNqQixtQ0FBZTs7SUFDZixtQ0FBZTs7SUFFZiw4QkFBVTs7SUFDViw4QkFBVTs7SUFDVixrQ0FBYzs7SUFDZCxtQ0FBZTs7SUFFZixtQ0FBZTs7SUFDZixtQ0FBZTs7Ozs7Ozs7O0lBUWYsaUNBQWlDOztJQUVqQyx1Q0FBcUI7O0lBRXJCLHNDQUFvQjs7SUFDcEIsMENBQTBCOztJQUMxQiw0Q0FBd0I7O0lBQ3hCLDJDQUF1Qjs7SUFDdkIsdUNBQW1COztJQUNuQix5Q0FBcUI7O0lBQ3JCLHdDQUFvQjs7SUFHcEIsa0NBQWdCOztJQUNoQiwyQ0FBMkI7O0lBQzNCLDZDQUF5Qjs7SUFDekIsNENBQXdCOztJQUN4QiwwQ0FBc0I7O0lBQ3RCLHdDQUFvQjs7SUFDcEIseUNBQXFCOztJQUNyQiw4Q0FBMEI7O0lBRzFCLG1DQUFpQjs7SUFDakIsNENBQTRCOztJQUM1Qiw4Q0FBMEI7O0lBQzFCLDZDQUF5Qjs7SUFDekIsMkNBQXVCOztJQUN2Qix5Q0FBcUI7O0lBQ3JCLDBDQUFzQjs7SUFDdEIsNENBQXdCOztJQUV4QixzQ0FBa0I7O0lBQ2xCLHlDQUFxQjs7SUFDckIseUNBQXFCOztJQUNyQiw0Q0FBNEI7O0lBRTVCLHdDQUEwQjs7SUFDMUIsNENBQThCOztJQUU5QixvQ0FBZ0I7O0lBQ2hCLGtEQUFrQzs7SUFDbEMsMENBQXVCOztJQUN2Qix3Q0FBd0I7O0lBQ3hCLHdDQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYXJ0Q29sb3IgfSBmcm9tICcuL2NoYXJ0LWNvbG9yJztcclxuaW1wb3J0IHsgQ2hhcnRUb29sdGlwSXRlbSB9IGZyb20gJy4vY2hhcnQtdG9vbHRpcC1pdGVtJztcclxuaW1wb3J0IHsgQ2hhcnRUb29sdGlwTW9kZWxFbGVtZW50IH0gZnJvbSAnLi9jaGFydC10b29sdGlwLW1vZGVsLWVsZW1lbnQnO1xyXG5cclxuLy8gW0NvbmZpZ3VyYXRpb24vVG9vbHRpcC9Ub29sdGlwIE1vZGVsXShodHRwczovL3d3dy5jaGFydGpzLm9yZy9kb2NzL2xhdGVzdC9jb25maWd1cmF0aW9uL3Rvb2x0aXAuaHRtbCN0b29sdGlwLW1vZGVsKVxyXG5leHBvcnQgaW50ZXJmYWNlIENoYXJ0VG9vbHRpcE1vZGVsIHtcclxuICAvLyBUaGUgaXRlbXMgdGhhdCB3ZSBhcmUgcmVuZGVyaW5nIGluIHRoZSB0b29sdGlwLiBTZWUgVG9vbHRpcCBJdGVtIEludGVyZmFjZSBzZWN0aW9uXHJcbiAgZGF0YVBvaW50czogQ2hhcnRUb29sdGlwSXRlbVtdO1xyXG4gIC8vIFBvc2l0aW9uaW5nXHJcbiAgeFBhZGRpbmc6IG51bWJlcjtcclxuICB5UGFkZGluZzogbnVtYmVyO1xyXG4gIHhBbGlnbjogc3RyaW5nO1xyXG4gIHlBbGlnbjogc3RyaW5nO1xyXG4gIC8vIFggYW5kIFkgcHJvcGVydGllcyBhcmUgdGhlIHRvcCBsZWZ0IG9mIHRoZSB0b29sdGlwXHJcbiAgeDogbnVtYmVyO1xyXG4gIHk6IG51bWJlcjtcclxuICB3aWR0aDogbnVtYmVyO1xyXG4gIGhlaWdodDogbnVtYmVyO1xyXG4gIC8vIFdoZXJlIHRoZSB0b29sdGlwIHBvaW50cyB0b1xyXG4gIGNhcmV0WDogbnVtYmVyO1xyXG4gIGNhcmV0WTogbnVtYmVyO1xyXG4gIC8qKlxyXG4gICAqIFRoZSBib2R5IGxpbmVzIHRoYXQgbmVlZCB0byBiZSByZW5kZXJlZFxyXG4gICAqIEVhY2ggb2JqZWN0IGNvbnRhaW5zIDMgcGFyYW1ldGVyc1xyXG4gICAqICogYmVmb3JlOiBzdHJpbmdbXSAtLSBsaW5lcyBvZiB0ZXh0IGJlZm9yZSB0aGUgbGluZSB3aXRoIHRoZSBjb2xvciBzcXVhcmVcclxuICAgKiAqIGxpbmVzOiBzdHJpbmdbXTsgLS0gbGluZXMgb2YgdGV4dCB0byByZW5kZXIgYXMgdGhlIG1haW4gaXRlbSB3aXRoIGNvbG9yIHNxdWFyZVxyXG4gICAqICogYWZ0ZXI6IHN0cmluZ1tdOyAtLSBsaW5lcyBvZiB0ZXh0IHRvIHJlbmRlciBhZnRlciB0aGUgbWFpbiBsaW5lc1xyXG4gICAqL1xyXG4gIGJvZHk6IENoYXJ0VG9vbHRpcE1vZGVsRWxlbWVudFtdO1xyXG4gIC8vIGxpbmVzIG9mIHRleHQgdGhhdCBhcHBlYXIgYWZ0ZXIgdGhlIHRpdGxlIGJ1dCBiZWZvcmUgdGhlIGJvZHlcclxuICBiZWZvcmVCb2R5OiBzdHJpbmdbXTtcclxuICAvLyBsaW5lIG9mIHRleHQgdGhhdCBhcHBlYXIgYWZ0ZXIgdGhlIGJvZHkgYW5kIGJlZm9yZSB0aGUgZm9vdGVyXHJcbiAgYWZ0ZXJCb2R5OiBzdHJpbmdbXTtcclxuICBib2R5Rm9udENvbG9yOiBDaGFydENvbG9yO1xyXG4gIF9ib2R5Rm9udEZhbWlseTogc3RyaW5nO1xyXG4gIF9ib2R5Rm9udFN0eWxlOiBzdHJpbmc7XHJcbiAgX2JvZHlBbGlnbjogc3RyaW5nO1xyXG4gIGJvZHlGb250U2l6ZTogbnVtYmVyO1xyXG4gIGJvZHlTcGFjaW5nOiBudW1iZXI7XHJcbiAgLy8gVGl0bGVcclxuICAvLyBsaW5lcyBvZiB0ZXh0IHRoYXQgZm9ybSB0aGUgdGl0bGVcclxuICB0aXRsZTogc3RyaW5nW107XHJcbiAgdGl0bGVGb250Q29sb3I6IENoYXJ0Q29sb3I7XHJcbiAgX3RpdGxlRm9udEZhbWlseTogc3RyaW5nO1xyXG4gIF90aXRsZUZvbnRTdHlsZTogc3RyaW5nO1xyXG4gIHRpdGxlRm9udFNpemU6IG51bWJlcjtcclxuICBfdGl0bGVBbGlnbjogc3RyaW5nO1xyXG4gIHRpdGxlU3BhY2luZzogbnVtYmVyO1xyXG4gIHRpdGxlTWFyZ2luQm90dG9tOiBudW1iZXI7XHJcbiAgLy8gRm9vdGVyXHJcbiAgLy8gbGluZXMgb2YgdGV4dCB0aGF0IGZvcm0gdGhlIGZvb3RlclxyXG4gIGZvb3Rlcjogc3RyaW5nW107XHJcbiAgZm9vdGVyRm9udENvbG9yOiBDaGFydENvbG9yO1xyXG4gIF9mb290ZXJGb250RmFtaWx5OiBzdHJpbmc7XHJcbiAgX2Zvb3RlckZvbnRTdHlsZTogc3RyaW5nO1xyXG4gIGZvb3RlckZvbnRTaXplOiBudW1iZXI7XHJcbiAgX2Zvb3RlckFsaWduOiBzdHJpbmc7XHJcbiAgZm9vdGVyU3BhY2luZzogbnVtYmVyO1xyXG4gIGZvb3Rlck1hcmdpblRvcDogbnVtYmVyO1xyXG4gIC8vIEFwcGVhcmFuY2VcclxuICBjYXJldFNpemU6IG51bWJlcjtcclxuICBjYXJldFBhZGRpbmc6IG51bWJlcjtcclxuICBjb3JuZXJSYWRpdXM6IG51bWJlcjtcclxuICBiYWNrZ3JvdW5kQ29sb3I6IENoYXJ0Q29sb3I7XHJcbiAgLy8gY29sb3JzIHRvIHJlbmRlciBmb3IgZWFjaCBpdGVtIGluIGJvZHlbXS4gVGhpcyBpcyB0aGUgY29sb3Igb2YgdGhlIHNxdWFyZXMgaW4gdGhlIHRvb2x0aXBcclxuICBsYWJlbENvbG9yczogQ2hhcnRDb2xvcltdO1xyXG4gIGxhYmVsVGV4dENvbG9yczogQ2hhcnRDb2xvcltdO1xyXG4gIC8vIDAgb3BhY2l0eSBpcyBhIGhpZGRlbiB0b29sdGlwXHJcbiAgb3BhY2l0eTogbnVtYmVyO1xyXG4gIGxlZ2VuZENvbG9yQmFja2dyb3VuZDogQ2hhcnRDb2xvcjtcclxuICBkaXNwbGF5Q29sb3JzOiBib29sZWFuO1xyXG4gIGJvcmRlckNvbG9yOiBDaGFydENvbG9yO1xyXG4gIGJvcmRlcldpZHRoOiBudW1iZXI7XHJcbn1cclxuIl19