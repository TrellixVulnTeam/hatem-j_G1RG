import { AngularChart } from './angular-chart';
import { ChartScales } from './chart-scales';
import { ChartElementsOptions } from './chart-elements-options';
import { ChartTooltipOptions } from './chart-tooltip-options';
import { ChartTitleOptions } from './chart-title-options';
import { ChartLegendOptions } from './chart-legend-options';
import { ChartAnimationOptions } from './chart-animation-options';
import { ChartHoverOptions } from './chart-hover-options';
import { ChartLayoutOptions } from './chart-layout-options';
import { ChartSize } from './chart-size';
import { BaseChartMetaConfig } from './base-chart-meta-config';
export interface ChartOptions<T extends BaseChartMetaConfig> {
    responsive?: boolean;
    responsiveAnimationDuration?: number;
    maintainAspectRatio?: boolean;
    aspectRatio?: number;
    onResize?: (this: AngularChart<T>, newSize: ChartSize) => void;
    devicePixelRatio?: number;
    events?: string[];
    onHover?: (this: AngularChart<T>, event: MouseEvent, activeElements: Array<{}>) => any;
    onClick?: (event?: MouseEvent, activeElements?: Array<{}>) => any;
    animation?: ChartAnimationOptions<T>;
    layout?: ChartLayoutOptions;
    legend?: ChartLegendOptions<T>;
    legendCallback?: (chart: AngularChart<T>) => string;
    title?: ChartTitleOptions;
    tooltips?: ChartTooltipOptions<T>;
    hover?: ChartHoverOptions;
    elements?: ChartElementsOptions;
    scales?: ChartScales<T>;
    showLines?: boolean;
    spanGaps?: boolean;
    cutoutPercentage?: number;
    circumference?: number;
    rotation?: number;
    plugins?: T['pluginOptions'];
}
