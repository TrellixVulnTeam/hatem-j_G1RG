import { ChartSize } from './chart-size';
import { BaseChartMetaConfig } from './base-chart-meta-config';
import { AngularChart } from './angular-chart';
export interface PluginServiceRegistrationOptions<T extends BaseChartMetaConfig> {
    beforeInit?: (chartInstance: AngularChart<T>, options?: any) => void;
    afterInit?: (chartInstance: AngularChart<T>, options?: any) => void;
    beforeUpdate?: (chartInstance: AngularChart<T>, options?: any) => void;
    afterUpdate?: (chartInstance: AngularChart<T>, options?: any) => void;
    beforeLayout?: (chartInstance: AngularChart<T>, options?: any) => void;
    afterLayout?: (chartInstance: AngularChart<T>, options?: any) => void;
    beforeDatasetsUpdate?: (chartInstance: AngularChart<T>, options?: any) => void;
    afterDatasetsUpdate?: (chartInstance: AngularChart<T>, options?: any) => void;
    beforeDatasetUpdate?: (chartInstance: AngularChart<T>, options?: any) => void;
    afterDatasetUpdate?: (chartInstance: AngularChart<T>, options?: any) => void;
    beforeRender?: (chartInstance: AngularChart<T>, options?: any) => void;
    afterRender?: (chartInstance: AngularChart<T>, options?: any) => void;
    beforeDraw?: (chartInstance: AngularChart<T>, easing: string, options?: any) => void;
    afterDraw?: (chartInstance: AngularChart<T>, easing: string, options?: any) => void;
    beforeDatasetsDraw?: (chartInstance: AngularChart<T>, easing: string, options?: any) => void;
    afterDatasetsDraw?: (chartInstance: AngularChart<T>, easing: string, options?: any) => void;
    beforeDatasetDraw?: (chartInstance: AngularChart<T>, easing: string, options?: any) => void;
    afterDatasetDraw?: (chartInstance: AngularChart<T>, easing: string, options?: any) => void;
    beforeTooltipDraw?: (chartInstance: AngularChart<T>, tooltipData?: any, options?: any) => void;
    afterTooltipDraw?: (chartInstance: AngularChart<T>, tooltipData?: any, options?: any) => void;
    beforeEvent?: (chartInstance: AngularChart<T>, event: Event, options?: any) => void;
    afterEvent?: (chartInstance: AngularChart<T>, event: Event, options?: any) => void;
    resize?: (chartInstance: AngularChart<T>, newChartSize: ChartSize, options?: any) => void;
    destroy?: (chartInstance: AngularChart<T>) => void;
    /** @deprecated since version 2.5.0. Use `afterLayout` instead. */
    afterScaleUpdate?: (chartInstance: AngularChart<T>, options?: any) => void;
}
